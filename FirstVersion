import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.BorderPane;
import javafx.scene.shape.Rectangle;
import javafx.scene.paint.Color;
import javafx.scene.text.Text;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.KeyCode;
import javafx.geometry.*;
import javafx.scene.control.TextField;
import javafx.scene.control.Label;
import javafx.geometry.Insets;
import javafx.scene.control.Button;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;


public class Project extends Application {
	@Override
	public void start(Stage primaryStage) {
		
		CheckerPane checker = new CheckerPane(10, 100);
		Hunter hunter = new Hunter();
		Tiger[] tigerArr = new Tiger[20];
		Rabbit[] rabbitArr = new Rabbit[20];
		Grass[] grassArr = new Grass[20];
		Trap[] trapArr = new Trap[20];
		checker.addNode(hunter.imageView2, 5, 5);
		Text text = new Text("Hunter's Hp : " + hunter.getHp());
		
		Set s = new Set();
		BorderPane pane = new BorderPane();
		pane.setPadding(new Insets(20, 20, 20, 10));
		
		// setting 화면
		GridPane labelPane = new GridPane();
		labelPane.setPadding(new Insets(2, 2, 2, 2));
		labelPane.setAlignment(Pos.CENTER);
		labelPane.setPrefWidth(300.0);
		labelPane.setStyle("-fx-border-color: black");
		labelPane.setVgap(30);
		
		Label tigerNum = new Label("Set Number of Tiger : ");
		TextField tigerField = new TextField();
		tigerField.setPromptText("Enter 1~5");
		labelPane.add(tigerNum, 0, 0);
		labelPane.add(tigerField, 1, 0);
		
		Label rabbitNum = new Label("Set Number of Rabbit : ");
		TextField rabbitField = new TextField();
		rabbitField.setPromptText("Enter 1~10");
		labelPane.add(rabbitNum, 0, 1);
		labelPane.add(rabbitField, 1, 1);
		
		Label grassNum = new Label("Set Number of Grass : ");
		TextField grassField = new TextField();
		grassField.setPromptText("Enter 1~10");
		labelPane.add(grassNum, 0, 2);
		labelPane.add(grassField, 1, 2);
		
		Label trapNum = new Label("Set Number of Trap : ");
		TextField trapField = new TextField();
		trapField.setPromptText("Enter 1~5");
		labelPane.add(trapNum, 0, 3);
		labelPane.add(trapField, 1, 3);
		//게임진행에 필요한 버튼들
		Button bt = new Button("Submit");
		Button bt1 = new Button("Potion");
		
		Button btUp = new Button("Go Up");
		Button btRight = new Button("Go Right");
		Button btDown = new Button("Go Down");
		Button btLeft = new Button("Go Left");
		Button btUpLeft = new Button("Go UpLeft");
		Button btUpRight = new Button("Go UpRight");
		Button btDownLeft = new Button("Go DownLeft");
		Button btDownRight = new Button("Go DownRight");
		
		labelPane.add(bt, 1,4);
		bt.setOnAction(e->{
			s.setTiger(Integer.parseInt(tigerField.getText()));
			s.setRabbit(Integer.parseInt(rabbitField.getText()));
			s.setGrass(Integer.parseInt(grassField.getText()));
			s.setTrap(Integer.parseInt(trapField.getText()));
			//labelPane.add(text,0,5);
			labelPane.add(bt1,0,6);
			
			while(hunter.getHp()>0) {
				
			}
			
		});
		bt1.setOnAction(e->{
			hunter.potion();
			labelPane.add(text,0,5);
		});
	
		
		pane.setLeft(checker);
		pane.setRight(labelPane);

		Scene scene = new Scene(pane);
		primaryStage.setTitle("Hunter_Game");
		primaryStage.setScene(scene);
		primaryStage.setResizable(false);
		primaryStage.show();
	}
	
	class Set{
		public int totalNumOfTiger = 0;
		public int totalNumOfRabbit = 0;
		public int totalNumOfGrass = 0;
		public int totalNumOfTrap = 0;
		public void setTiger(int tigerNum) {
			totalNumOfTiger = tigerNum;
		}
		public void setRabbit(int tigerNum) {
			totalNumOfRabbit = tigerNum;
		}
		public void setGrass(int tigerNum) {
			totalNumOfGrass = tigerNum;
		}
		public void setTrap(int tigerNum) {
			totalNumOfTrap = tigerNum;
		}
	}

	// 게임 판 만듦
	class CheckerPane extends GridPane {
		CheckerPane() {

		}

		CheckerPane(int n, int squareSize) {
			for (int col = 0; col < n; col++) {
				boolean isWhite = col % 2 == 0 ? true : false;
				for (int row = 0; row < n; row++) {
					Rectangle rect = new Rectangle(0, 0, squareSize, squareSize);
					rect.setFill(isWhite ? Color.WHITE : Color.SKYBLUE);
					rect.setStroke(Color.BLACK);
					isWhite = !isWhite;
					add(rect, col, row);
				}
			}
		}

		/*
		 * System.out.print(getRowIndex(imageView2));
		 * System.out.print(getColumnIndex(imageView2));
		 */
		public void addNode(ImageView i, int col, int row) {
			super.add(i, col, row);
		}

	}

//클래스
	interface Interaction {
		// 사냥꾼이 동물 잡는 것, 호랑이가 토끼 잡아먹는 것, 토끼가 풀 먹는 것, 함정에 빠지는 것
		public abstract void die();
	}

	class Hunter extends CheckerPane implements Interaction {
		private int hunterLevel = 4;
		private int Hp = 3;
		private int potionNum = 3;
		ImageView imageView2;

		Hunter() {
			Image image = new Image("hunter.jpg");
			imageView2 = new ImageView(image);
			imageView2.setFitHeight(100);
			imageView2.setFitWidth(100);
			add(imageView2, 0, 1);
		}

		public void potion() {
			setHp(4);
		}
		public void setHp(int Hp) {
			this.Hp = Hp;
		}
		public int getHp() {
			return Hp;
		}

		public void move() {

		}

		public void die() {

		}

		public int getLevel() {
			return hunterLevel;
		}
	}

	class Tiger extends CheckerPane implements Interaction {
		private int tigerLevel = 3;

		Tiger() {
			Image image = new Image("tiger.jpg");
			ImageView imageView2 = new ImageView(image);
			imageView2.setFitHeight(100);
			imageView2.setFitWidth(100);
		}

		public void move() {

		}

		public void die() {

		}

		public int getLevel() {
			return tigerLevel;
		}
	}

	class Rabbit extends CheckerPane implements Interaction {
		private int rabbitLevel = 2;

		Rabbit() {
			Image image = new Image("rabbit.jpg");
			ImageView imageView2 = new ImageView(image);
			imageView2.setFitHeight(100);
			imageView2.setFitWidth(100);
		}

		public void move() {

		}

		public void die() {

		}

		public int getLevel() {
			return rabbitLevel;
		}
	}

	class Grass implements Interaction {
		private int grassLevel = 1;

		Grass() {
			Image image = new Image("grass.jpg");
			ImageView imageView2 = new ImageView(image);
			imageView2.setFitHeight(100);
			imageView2.setFitWidth(100);
		}

		public void die() {

		}
		
		public int getLevel() {
			return grassLevel;
		}
	}

	class Trap {
		private int trapLevel = 5;

		Trap() {
			Image image = new Image("pit.jpg");
			ImageView imageView2 = new ImageView(image);
			imageView2.setFitHeight(100);
			imageView2.setFitWidth(100);
		}

		public int getLevel() {
			return trapLevel;
		}
	}

	public static void main(String[] args) {
		Application.launch(args);
	}
}
